<section class="light" id="portfolio">
    <h2>Portfolio</h2>
    <div class="portfolio-container">
        @if (projects is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="portfolio-hero">
                @if (hero is not null)
                {
                    <img class="portfolio-hero-img" src="@(hero.Source)" alt="@(hero.AlternateText)" />
                }
            </div>
            <div class="container">
                @foreach (var project in projects)
                {
                    <div class="project-box" key="@project.Title">
                        <a href="@project.Url" target="_blank" rel="noopener noreferrer">
                            <div class="project-content">
                                <div class="project-image">
                                    <img src="@project.Source" alt="@project.Title" />
                                </div>
                                <div class="project-info">
                                    <h3>@project.Title</h3>
                                    <p class="small">@project.Description</p>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
    </div>
</section>

@code
{
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private List<Project>? projects;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<Project>>("data/projects.json");
        
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "portfolio");
    }
}

