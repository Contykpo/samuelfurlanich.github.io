@inject IStringLocalizer<Resource> Localizer

<section class="about-section" id="about">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Source)" alt="@(hero.AlternateText)" />
    }

    <div data-aos="fade-up">
        <div class="about-title">
            <h2>@Localizer["about"]</h2>
        </div>
    </div>
    <div data-aos="flip-up" data-aos-duration="500">
        <div class="about-content">
            @if (aboutMe is null)
            {
                <p><em>@Localizer["loading"]</em></p>
            }
            else
            {
                <p class="large">@Localizer[$"{aboutMe.Description}"]</p>
                <hr />
                <ul class="skills-list">
                    @foreach (var skill in aboutMe.Skills)
                    {
                        <li key="@skill" class="skills-list-item">@Localizer[$"{skill}"]</li>
                    }
                </ul>
                <hr />
                <p class="detail">@Localizer[$"{aboutMe.DetailOrQuote}"]</p>
            }
        </div>
    </div>
</section>


@code
{
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private AboutMe? aboutMe;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        aboutMe = await Http.GetFromJsonAsync<AboutMe>("data/aboutme.json");

        hero = await HeroImageService.GetHeroAsync(img => img.Name is "about");
    }
}